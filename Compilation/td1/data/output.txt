COMMENTAIRE SIMPLE: /////////////////////////////////////////////
COMMENTAIRE SIMPLE: // compilation: c++ -o pgcd pgcd.cc
COMMENTAIRE SIMPLE: // execution: ./pgcd
COMMENTAIRE SIMPLE: /////////////////////////////////////////////
COMMENTAIRE MULTIPLE: /*Voici le contenu d'un commentaire int x = 5 + y;*/

#include <iostream>
#include <string>
using namespace std;

int main(int argn, char **argv){
  int a;
  int b;
  std::cout << "Entrer a: ";
  std::cin >> a;
  std::cout << "Entrer b: ";
  std::cin >> b;

  /* Commentaire int x = 42; */
WHILE: while
SEPARATEUR: (
TRUE: true
SEPARATEUR: )
SEPARATEUR: {
IF: if
SEPARATEUR: (
IDENTIFICATEUR DÉTECTÉ: b
OPERATOR: >
IDENTIFICATEUR DÉTECTÉ: a
SEPARATEUR: )
SEPARATEUR: {
IDENTIFICATEUR DÉTECTÉ: b
OPERATOR: =
IDENTIFICATEUR DÉTECTÉ: b
OPERATOR: %
IDENTIFICATEUR DÉTECTÉ: a
SEPARATEUR: ;
IF: if
SEPARATEUR: (
IDENTIFICATEUR DÉTECTÉ: b
OPERATOR: ==
ENTIER DÉTECTÉ: 0
SEPARATEUR: )
BREAK: break
SEPARATEUR: ;
SEPARATEUR: }
ELSE: else
SEPARATEUR: {
IDENTIFICATEUR DÉTECTÉ: a
OPERATOR: =
IDENTIFICATEUR DÉTECTÉ: a
OPERATOR: %
IDENTIFICATEUR DÉTECTÉ: b
SEPARATEUR: ;
IF: if
SEPARATEUR: (
IDENTIFICATEUR DÉTECTÉ: a
OPERATOR: ==
ENTIER DÉTECTÉ: 0
SEPARATEUR: )
BREAK: break
SEPARATEUR: ;
SEPARATEUR: }
SEPARATEUR: }
IDENTIFICATEUR DÉTECTÉ: std
SEPARATEUR: :
SEPARATEUR: :
IDENTIFICATEUR DÉTECTÉ: cout
OPERATOR: <<
STRING: "pgcd: "
SEPARATEUR: ;
IF: if
SEPARATEUR: (
IDENTIFICATEUR DÉTECTÉ: a
OPERATOR: ==
ENTIER DÉTECTÉ: 0
SEPARATEUR: )
IDENTIFICATEUR DÉTECTÉ: std
SEPARATEUR: :
SEPARATEUR: :
IDENTIFICATEUR DÉTECTÉ: cout
OPERATOR: <<
IDENTIFICATEUR DÉTECTÉ: b
OPERATOR: <<
IDENTIFICATEUR DÉTECTÉ: std
SEPARATEUR: :
SEPARATEUR: :
IDENTIFICATEUR DÉTECTÉ: endl
SEPARATEUR: ;
ELSE: else
IDENTIFICATEUR DÉTECTÉ: std
SEPARATEUR: :
SEPARATEUR: :
IDENTIFICATEUR DÉTECTÉ: cout
OPERATOR: <<
IDENTIFICATEUR DÉTECTÉ: a
OPERATOR: <<
IDENTIFICATEUR DÉTECTÉ: std
SEPARATEUR: :
SEPARATEUR: :
IDENTIFICATEUR DÉTECTÉ: endl
SEPARATEUR: ;
INT: int
IDENTIFICATEUR DÉTECTÉ: x
OPERATOR: =
ENTIER DÉTECTÉ: 42
SEPARATEUR: ;
FLOAT: float
IDENTIFICATEUR DÉTECTÉ: y
OPERATOR: =
ENTIER DÉTECTÉ: 3
SEPARATEUR: .
ENTIER DÉTECTÉ: 14
SEPARATEUR: ;
FLOAT: float
IDENTIFICATEUR DÉTECTÉ: xy
OPERATOR: =
ENTIER DÉTECTÉ: 3
OPERATOR: /
ENTIER DÉTECTÉ: 4
SEPARATEUR: ;
FLOAT: float
IDENTIFICATEUR DÉTECTÉ: _x1z
OPERATOR: =
OPERATOR: -
FLOTTANT DÉTECTÉ: 450E12
SEPARATEUR: ;
FLOAT: float
IDENTIFICATEUR DÉTECTÉ: test
OPERATOR: =
OPERATOR: -
ENTIER DÉTECTÉ: 12
OPERATOR: -
ENTIER DÉTECTÉ: 3
SEPARATEUR: ;
FLOAT: float
IDENTIFICATEUR DÉTECTÉ: test2
OPERATOR: =
OPERATOR: -
FLOTTANT DÉTECTÉ: 12e-3
SEPARATEUR: ;
BOOL: bool
IDENTIFICATEUR DÉTECTÉ: expr
OPERATOR: =
SEPARATEUR: (
IDENTIFICATEUR DÉTECTÉ: x
OPERATOR: %
ENTIER DÉTECTÉ: 2
OPERATOR: ==
ENTIER DÉTECTÉ: 0
SEPARATEUR: )
OPERATOR: |
SEPARATEUR: (
ENTIER DÉTECTÉ: 3
OPERATOR: &
ENTIER DÉTECTÉ: 4
SEPARATEUR: )
SEPARATEUR: ;
IDENTIFICATEUR DÉTECTÉ: std
SEPARATEUR: :
SEPARATEUR: :
IDENTIFICATEUR DÉTECTÉ: string
IDENTIFICATEUR DÉTECTÉ: myString
OPERATOR: =
STRING: "This is a string \n\t int x = 3;"
SEPARATEUR: ;
IDENTIFICATEUR DÉTECTÉ: std
SEPARATEUR: :
SEPARATEUR: :
IDENTIFICATEUR DÉTECTÉ: string
IDENTIFICATEUR DÉTECTÉ: emptyString
OPERATOR: =
STRING: ""
SEPARATEUR: ;
COMMENTAIRE MULTIPLE: /*/**//**//**//*/*//////////////*/*/*/*/*/*/*/*/****////*/*/*/*/*/*/**/
COMMENTAIRE SIMPLE: // Commentaire
BOOL: bool
IDENTIFICATEUR DÉTECTÉ: expr2
OPERATOR: =
SEPARATEUR: (
IDENTIFICATEUR DÉTECTÉ: x
OPERATOR: %
ENTIER DÉTECTÉ: 2
OPERATOR: ==
ENTIER DÉTECTÉ: 0
SEPARATEUR: )
TRUE: true
SEPARATEUR: :
FALSE: false
SEPARATEUR: ;
SEPARATEUR: }
Nombre de lignes et colonnes et caractères: (53, 0, 1084)
Nombre d'identificateurs: 39
Nombre de mots clés: 20
Nombre d'opérateurs: 34

// This file was generated by Beaver v0.9.6.1

1:	declaration_list: SHIFT; goto 2
	expression_typee: ACCEPT
	[any]: REDUCE declaration_list = 
2:	LPAR: SHIFT; goto 18
	CONST_STRING: SHIFT; goto 15
	IDENT: SHIFT; goto 26
	LBRACKET: SHIFT; goto 21
	CONST_INT: SHIFT; goto 14
	expression: SHIFT; goto 3
	declaration: SHIFT; goto 25
3:	EOF: REDUCE expression_typee = declaration_list expression
	LPAR: SHIFT; goto 8
	PLUS: SHIFT; goto 4
	MINUS: SHIFT; goto 6
4:	LPAR: SHIFT; goto 18
	CONST_STRING: SHIFT; goto 15
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 21
	CONST_INT: SHIFT; goto 14
	expression: SHIFT; goto 5
5:	[any]: REDUCE expression = expression.e1 PLUS expression.e2
6:	LPAR: SHIFT; goto 18
	CONST_STRING: SHIFT; goto 15
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 21
	CONST_INT: SHIFT; goto 14
	expression: SHIFT; goto 7
7:	[any]: REDUCE expression = expression.e1 MINUS expression.e2
8:	LPAR: SHIFT; goto 18
	CONST_STRING: SHIFT; goto 15
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 21
	CONST_INT: SHIFT; goto 14
	expression: SHIFT; goto 24
	expression_list: SHIFT; goto 9
	[any]: REDUCE expression_list = 
9:	RPAR: SHIFT; goto 10
	COMMA: SHIFT; goto 11
10:	[any]: REDUCE expression = expression.e LPAR expression_list.l RPAR
11:	LPAR: SHIFT; goto 18
	CONST_STRING: SHIFT; goto 15
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 21
	CONST_INT: SHIFT; goto 14
	expression: SHIFT; goto 12
12:	LPAR: SHIFT; goto 8
	PLUS: SHIFT; goto 4
	MINUS: SHIFT; goto 6
	[any]: REDUCE expression_list = expression_list COMMA expression
13:	[any]: REDUCE expression = IDENT
14:	[any]: REDUCE expression = CONST_INT
15:	PLUS: SHIFT; goto 16
	[any]: REDUCE expression = CONST_STRING
16:	CONST_STRING: SHIFT; goto 17
17:	[any]: REDUCE expression = CONST_STRING PLUS CONST_STRING
18:	LPAR: SHIFT; goto 18
	CONST_STRING: SHIFT; goto 15
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 21
	CONST_INT: SHIFT; goto 14
	expression: SHIFT; goto 19
19:	LPAR: SHIFT; goto 8
	PLUS: SHIFT; goto 4
	RPAR: SHIFT; goto 20
	MINUS: SHIFT; goto 6
20:	[any]: REDUCE expression = LPAR expression.e RPAR
21:	LPAR: SHIFT; goto 18
	CONST_STRING: SHIFT; goto 15
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 21
	CONST_INT: SHIFT; goto 14
	expression: SHIFT; goto 24
	expression_list: SHIFT; goto 22
	[any]: REDUCE expression_list = 
22:	COMMA: SHIFT; goto 11
	RBRACKET: SHIFT; goto 23
23:	[any]: REDUCE expression = LBRACKET expression_list.l RBRACKET
24:	LPAR: SHIFT; goto 8
	PLUS: SHIFT; goto 4
	MINUS: SHIFT; goto 6
	[any]: REDUCE expression_list = expression
25:	[any]: REDUCE declaration_list = declaration_list declaration
26:	COLON: SHIFT; goto 27
	[any]: REDUCE expression = IDENT
27:	LPAR: SHIFT; goto 35
	LIST: SHIFT; goto 31
	TYPE_INT: SHIFT; goto 40
	TYPE_STRING: SHIFT; goto 41
	type: SHIFT; goto 28
	type_simple: SHIFT; goto 30
28:	SEMICOLON: SHIFT; goto 29
29:	[any]: REDUCE declaration = IDENT.id COLON type.t SEMICOLON
30:	[any]: REDUCE type = type_simple
31:	LPAR: SHIFT; goto 32
32:	LPAR: SHIFT; goto 35
	LIST: SHIFT; goto 31
	TYPE_INT: SHIFT; goto 40
	TYPE_STRING: SHIFT; goto 41
	type: SHIFT; goto 33
	type_simple: SHIFT; goto 30
33:	RPAR: SHIFT; goto 34
34:	[any]: REDUCE type = LIST.l LPAR type.t RPAR
35:	LPAR: SHIFT; goto 35
	LIST: SHIFT; goto 31
	TYPE_INT: SHIFT; goto 40
	TYPE_STRING: SHIFT; goto 41
	type: SHIFT; goto 44
	type_simple: SHIFT; goto 30
	type_list: SHIFT; goto 36
	[any]: REDUCE type_list = 
36:	RPAR: SHIFT; goto 37
	COMMA: SHIFT; goto 42
37:	MAPSTO: SHIFT; goto 38
38:	LPAR: SHIFT; goto 35
	LIST: SHIFT; goto 31
	TYPE_INT: SHIFT; goto 40
	TYPE_STRING: SHIFT; goto 41
	type: SHIFT; goto 39
	type_simple: SHIFT; goto 30
39:	[any]: REDUCE type = LPAR type_list.l RPAR MAPSTO type.t
40:	[any]: REDUCE type_simple = TYPE_INT
41:	[any]: REDUCE type_simple = TYPE_STRING
42:	LPAR: SHIFT; goto 35
	LIST: SHIFT; goto 31
	TYPE_INT: SHIFT; goto 40
	TYPE_STRING: SHIFT; goto 41
	type: SHIFT; goto 43
	type_simple: SHIFT; goto 30
43:	[any]: REDUCE type_list = type_list.l COMMA type.t
44:	[any]: REDUCE type_list = type.t

// This file was generated by Beaver v0.9.6.1

1:	declaration_list: SHIFT; goto 2
	expression_typee: ACCEPT
	[any]: REDUCE declaration_list = 
2:	LPAR: SHIFT; goto 16
	IDENT: SHIFT; goto 24
	LBRACKET: SHIFT; goto 19
	CONST_INT: SHIFT; goto 14
	CONST_STRING: SHIFT; goto 15
	expression: SHIFT; goto 3
	declaration: SHIFT; goto 23
3:	EOF: REDUCE expression_typee = declaration_list expression
	LPAR: SHIFT; goto 8
	PLUS: SHIFT; goto 4
	MINUS: SHIFT; goto 6
4:	LPAR: SHIFT; goto 16
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 19
	CONST_INT: SHIFT; goto 14
	CONST_STRING: SHIFT; goto 15
	expression: SHIFT; goto 5
5:	[any]: REDUCE expression = expression PLUS expression
6:	LPAR: SHIFT; goto 16
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 19
	CONST_INT: SHIFT; goto 14
	CONST_STRING: SHIFT; goto 15
	expression: SHIFT; goto 7
7:	[any]: REDUCE expression = expression MINUS expression
8:	LPAR: SHIFT; goto 16
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 19
	CONST_INT: SHIFT; goto 14
	CONST_STRING: SHIFT; goto 15
	expression: SHIFT; goto 22
	expression_list: SHIFT; goto 9
	[any]: REDUCE expression_list = 
9:	RPAR: SHIFT; goto 10
	COMMA: SHIFT; goto 11
10:	[any]: REDUCE expression = expression LPAR expression_list RPAR
11:	LPAR: SHIFT; goto 16
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 19
	CONST_INT: SHIFT; goto 14
	CONST_STRING: SHIFT; goto 15
	expression: SHIFT; goto 12
12:	LPAR: SHIFT; goto 8
	PLUS: SHIFT; goto 4
	MINUS: SHIFT; goto 6
	[any]: REDUCE expression_list = expression_list COMMA expression
13:	[any]: REDUCE expression = IDENT.id
14:	[any]: REDUCE expression = CONST_INT
15:	[any]: REDUCE expression = CONST_STRING
16:	LPAR: SHIFT; goto 16
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 19
	CONST_INT: SHIFT; goto 14
	CONST_STRING: SHIFT; goto 15
	expression: SHIFT; goto 17
17:	LPAR: SHIFT; goto 8
	RPAR: SHIFT; goto 18
	PLUS: SHIFT; goto 4
	MINUS: SHIFT; goto 6
18:	[any]: REDUCE expression = LPAR expression RPAR
19:	LPAR: SHIFT; goto 16
	IDENT: SHIFT; goto 13
	LBRACKET: SHIFT; goto 19
	CONST_INT: SHIFT; goto 14
	CONST_STRING: SHIFT; goto 15
	expression: SHIFT; goto 22
	expression_list: SHIFT; goto 20
	[any]: REDUCE expression_list = 
20:	COMMA: SHIFT; goto 11
	RBRACKET: SHIFT; goto 21
21:	[any]: REDUCE expression = LBRACKET expression_list RBRACKET
22:	LPAR: SHIFT; goto 8
	PLUS: SHIFT; goto 4
	MINUS: SHIFT; goto 6
	[any]: REDUCE expression_list = expression
23:	[any]: REDUCE declaration_list = declaration_list declaration
24:	COLON: SHIFT; goto 25
	[any]: REDUCE expression = IDENT.id
25:	LPAR: SHIFT; goto 33
	LIST: SHIFT; goto 29
	TYPE_INT: SHIFT; goto 38
	TYPE_STRING: SHIFT; goto 39
	type: SHIFT; goto 26
	type_simple: SHIFT; goto 28
26:	SEMICOLON: SHIFT; goto 27
27:	[any]: REDUCE declaration = IDENT.id COLON type.t SEMICOLON
28:	[any]: REDUCE type = type_simple
29:	LPAR: SHIFT; goto 30
30:	LPAR: SHIFT; goto 33
	LIST: SHIFT; goto 29
	TYPE_INT: SHIFT; goto 38
	TYPE_STRING: SHIFT; goto 39
	type: SHIFT; goto 31
	type_simple: SHIFT; goto 28
31:	RPAR: SHIFT; goto 32
32:	[any]: REDUCE type = LIST LPAR type RPAR
33:	LPAR: SHIFT; goto 33
	LIST: SHIFT; goto 29
	TYPE_INT: SHIFT; goto 38
	TYPE_STRING: SHIFT; goto 39
	type: SHIFT; goto 42
	type_simple: SHIFT; goto 28
	type_list: SHIFT; goto 34
	[any]: REDUCE type_list = 
34:	RPAR: SHIFT; goto 35
	COMMA: SHIFT; goto 40
35:	MAPSTO: SHIFT; goto 36
36:	LPAR: SHIFT; goto 33
	LIST: SHIFT; goto 29
	TYPE_INT: SHIFT; goto 38
	TYPE_STRING: SHIFT; goto 39
	type: SHIFT; goto 37
	type_simple: SHIFT; goto 28
37:	[any]: REDUCE type = LPAR type_list RPAR MAPSTO type
38:	[any]: REDUCE type_simple = TYPE_INT
39:	[any]: REDUCE type_simple = TYPE_STRING
40:	LPAR: SHIFT; goto 33
	LIST: SHIFT; goto 29
	TYPE_INT: SHIFT; goto 38
	TYPE_STRING: SHIFT; goto 39
	type: SHIFT; goto 41
	type_simple: SHIFT; goto 28
41:	[any]: REDUCE type_list = type_list COMMA type
42:	[any]: REDUCE type_list = type
